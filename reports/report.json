{
  "stats": {
    "suites": 4,
    "tests": 5,
    "passes": 4,
    "pending": 1,
    "failures": 0,
    "start": "2024-12-05T12:25:02.230Z",
    "end": "2024-12-05T12:25:07.926Z",
    "duration": 5696,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 20,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "11c4a5f1-316c-4f32-b2e7-3de195674f1f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1d4ebaf0-f2c5-4f8c-81c0-febbc6d4375e",
          "title": "HomePage Tests",
          "fullFile": "D:\\SC2006_Proj\\ecom_frontend\\SeleniumTesting\\Test\\homePageTest.js",
          "file": "\\SeleniumTesting\\Test\\homePageTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8a45bbdf-a4f4-4f33-bb7a-a37ed6021c81",
              "title": "Requirement Testing",
              "fullFile": "D:\\SC2006_Proj\\ecom_frontend\\SeleniumTesting\\Test\\homePageTest.js",
              "file": "\\SeleniumTesting\\Test\\homePageTest.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "TEST-1.1: Home page loads with the correct title",
                  "fullTitle": "HomePage Tests Requirement Testing TEST-1.1: Home page loads with the correct title",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "460cbf41-a01a-45c9-bed5-fb59b2ca63bd",
                  "parentUUID": "8a45bbdf-a4f4-4f33-bb7a-a37ed6021c81",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "460cbf41-a01a-45c9-bed5-fb59b2ca63bd"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "9cdee65a-db7e-412f-96c2-bef66110b1d7",
          "title": "Authentication Features",
          "fullFile": "D:\\SC2006_Proj\\ecom_frontend\\SeleniumTesting\\Test\\LoginPageTest.js",
          "file": "\\SeleniumTesting\\Test\\LoginPageTest.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Authentication Features\"",
              "fullTitle": "Authentication Features \"before all\" hook in \"Authentication Features\"",
              "timedOut": false,
              "duration": 1052,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"chrome\").build();\nloginPage = new LoginPage(driver);",
              "err": {},
              "uuid": "a7b44550-6546-4b85-97c3-609c7c1f5924",
              "parentUUID": "9cdee65a-db7e-412f-96c2-bef66110b1d7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Authentication Features\"",
              "fullTitle": "Authentication Features \"after all\" hook in \"Authentication Features\"",
              "timedOut": false,
              "duration": 104,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.quit(); // Close WebDriver after all tests",
              "err": {},
              "uuid": "2d482234-c638-4c70-a9a6-b54c5429d75f",
              "parentUUID": "9cdee65a-db7e-412f-96c2-bef66110b1d7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "1a484826-614a-4a5d-841b-f2194a31fc5c",
              "title": "Authentication: Login Testing",
              "fullFile": "D:\\SC2006_Proj\\ecom_frontend\\SeleniumTesting\\Test\\LoginPageTest.js",
              "file": "\\SeleniumTesting\\Test\\LoginPageTest.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"Authentication: Login Testing\"",
                  "fullTitle": "Authentication Features Authentication: Login Testing \"before each\" hook in \"Authentication: Login Testing\"",
                  "timedOut": false,
                  "duration": 186,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await loginPage.open(baseUrl); // Navigate to the login page",
                  "err": {},
                  "uuid": "01fa7ea4-66a8-47eb-94bb-2d32aa6334d0",
                  "parentUUID": "1a484826-614a-4a5d-841b-f2194a31fc5c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "AUTH-1: Login Page should load the username/email and password input field together with submit button",
                  "fullTitle": "Authentication Features Authentication: Login Testing AUTH-1: Login Page should load the username/email and password input field together with submit button",
                  "timedOut": false,
                  "duration": 160,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const usernameField = await driver.findElement(loginPage.usernameInput);\nassert.ok(\n  await usernameField.isDisplayed(),\n  \"Username input is not displayed\"\n);\nconst passwordField = await driver.findElement(loginPage.passwordInput);\nassert.ok(\n  await passwordField.isDisplayed(),\n  \"Password input is not displayed\"\n);\nconst submitButton = await driver.findElement(loginPage.submitButton);\nassert.ok(\n  await submitButton.isDisplayed(),\n  \"Submit button is not displayed\"\n);",
                  "err": {},
                  "uuid": "7fb90ec8-1255-41fc-bf7d-b6e1a17f5a1e",
                  "parentUUID": "1a484826-614a-4a5d-841b-f2194a31fc5c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "AUTH-2: When user inputs invalid username and password, an error message should show up",
                  "fullTitle": "Authentication Features Authentication: Login Testing AUTH-2: When user inputs invalid username and password, an error message should show up",
                  "timedOut": false,
                  "duration": 1067,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await loginPage.enterUsername(\"randomTestUsername_1\");\nawait loginPage.enterPassword(\"enterAnyPassword\");\nawait loginPage.clickSubmit();\nconst errorMessage = await driver.wait(\n  until.elementLocated(\n    By.xpath(\"//*[contains(text(), 'Login Failed: Invalid credentials')]\")\n  ),\n  15000 // Wait up to 15 seconds\n);\nawait driver.wait(until.elementIsVisible(errorMessage), 10000);\nconst errorText = await errorMessage.getText();\nassert.strictEqual(\n  errorText,\n  \"Login Failed: Invalid credentials\",\n  \"Error message text is incorrect\"\n);",
                  "err": {},
                  "uuid": "27807acb-af58-4449-a7a7-93d05e69400d",
                  "parentUUID": "1a484826-614a-4a5d-841b-f2194a31fc5c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "AUTH-3: When user submits an empty form, error messages below the inputs should show up",
                  "fullTitle": "Authentication Features Authentication: Login Testing AUTH-3: When user submits an empty form, error messages below the inputs should show up",
                  "timedOut": false,
                  "duration": 495,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await loginPage.clickSubmit();\nconst errorMessage1 = await driver.wait(\n  until.elementLocated(\n    By.xpath(\n      \"//*[contains(text(), 'Please input your username or email!')]\"\n    )\n  ),\n  15000 // Wait up to 15 seconds\n);\nconst errorMessage2 = await driver.wait(\n  until.elementLocated(\n    By.xpath(\"//*[contains(text(), 'Please input your password!')]\")\n  ),\n  15000 // Wait up to 15 seconds\n);\nawait driver.wait(until.elementIsVisible(errorMessage1), 5000);\nawait driver.wait(until.elementIsVisible(errorMessage2), 5000);\nconst errorText1 = await errorMessage1.getText();\nconst errorText2 = await errorMessage2.getText();\nassert.strictEqual(\n  errorText1,\n  \"Please input your username or email!\",\n  \"Error message text is incorrect\"\n);\nassert.strictEqual(\n  errorText2,\n  \"Please input your password!\",\n  \"Error message text is incorrect\"\n);",
                  "err": {},
                  "uuid": "4b0f5016-98e0-45c3-8393-47c401979502",
                  "parentUUID": "1a484826-614a-4a5d-841b-f2194a31fc5c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "AUTH-4: When user enters a valid username and password, the system should redirect to the home page",
                  "fullTitle": "Authentication Features Authentication: Login Testing AUTH-4: When user enters a valid username and password, the system should redirect to the home page",
                  "timedOut": false,
                  "duration": 1047,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Enter valid credentials\nawait loginPage.enterUsername(\"john_doe\");\nawait loginPage.enterPassword(\"hashed_password_1\");\nawait loginPage.clickSubmit();\n// Wait for the page URL to change to the home page\nawait driver.wait(\n  async () => {\n    const currentUrl = await driver.getCurrentUrl();\n    return currentUrl === baseUrl + \"/\";\n  },\n  15000, // Wait up to 15 seconds\n  \"Did not redirect to the home page\"\n);\n// Verify the current URL\nconst currentUrl = await driver.getCurrentUrl();\nconsole.log(\"Redirected URL:\", currentUrl);\nassert.strictEqual(\n  currentUrl,\n  baseUrl + \"/\",\n  \"Redirection to the home page failed\"\n);\n// Wait for the top-right nav bar user dropdown to be located\nconst userDropdown = await driver.wait(\n  until.elementLocated(\n    By.xpath('//*[@id=\"root\"]/div/header/div[2]/div/div/div[2]/div')\n  ),\n  15000, // Wait up to 15 seconds\n  \"User dropdown not found\"\n);\n// Wait for the user dropdown to be visible\nawait driver.wait(until.elementIsVisible(userDropdown), 5000);\n// Retrieve the text inside the dropdown container\nconst fullDropdownText = await userDropdown.getText();\n// Retrieve the text inside the span\nconst spanElement = await userDropdown.findElement(By.xpath(\".//span\"));\nconst spanText = await spanElement.getText();\n// Remove the span text from the full dropdown text to isolate the second text\nconst secondText = fullDropdownText.replace(spanText, \"\").trim();\n// Verify the second text is the username\nassert.strictEqual(\n  secondText,\n  \"john_doe\", // Replace with the expected second text\n  \"Username is not displayed correctly as the second text in the dropdown\"\n);",
                  "err": {},
                  "uuid": "76b1d7fd-e8f5-443a-83d4-d4b558af2a02",
                  "parentUUID": "1a484826-614a-4a5d-841b-f2194a31fc5c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7fb90ec8-1255-41fc-bf7d-b6e1a17f5a1e",
                "27807acb-af58-4449-a7a7-93d05e69400d",
                "4b0f5016-98e0-45c3-8393-47c401979502",
                "76b1d7fd-e8f5-443a-83d4-d4b558af2a02"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2769,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./reports",
        "reportFilename": "report",
        "overwrite": "true",
        "html": "false",
        "json": "true"
      },
      "version": "6.2.0"
    }
  }
}